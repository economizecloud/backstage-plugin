{"version":3,"file":"index-13c0c860.esm.js","sources":["../../src/api/economizeApi.ts","../../src/api/GetQuery.ts","../../src/ulits/ulits.ts","../../src/api/economizeClient.ts","../../src/routes.ts","../../src/plugin.ts"],"sourcesContent":["import { createApiRef } from '@backstage/core-plugin-api';\r\n\r\nexport interface MonthlyCost {\r\n  labels: string[];\r\n  data: number[];\r\n}\r\nexport interface WeeklyCost {\r\n  labels: string[][];\r\n  data: number[];\r\n}\r\nexport interface ServiceCost {\r\n  service: string;\r\n  month: string;\r\n  amount: number;\r\n  name: string;\r\n}\r\nexport interface OrgName {\r\n  name: string;\r\n  OrgID: string;\r\n  AccID: string;\r\n}\r\nexport interface Anomalies {\r\n  anomalies: Anomaly[];\r\n  bounds: Anomaly[];\r\n  project_id: string;\r\n  total_anomaly_cost: number;\r\n}\r\n\r\nexport interface Anomaly {\r\n  actual_cost: number;\r\n  anomalyTimestamp: string;\r\n  anomalyTimestampISO: string;\r\n  expected_cost_range: number[];\r\n  label: string;\r\n}\r\n\r\nexport interface EconomizeApi {\r\n  getMonthlyCost: (isCredit: boolean) => Promise<MonthlyCost>;\r\n  getDailyCost: (isCredit: boolean) => Promise<MonthlyCost>;\r\n  getWeeklyCost: (isCredit: boolean) => Promise<WeeklyCost>;\r\n  getTopServices: (isCredit: boolean) => Promise<ServiceCost[]>;\r\n  getOrgAndProject: () => Promise<OrgName>;\r\n  getAnomalyDelection: (startDate: Date, endDate: Date) => Promise<Anomalies>;\r\n}\r\n\r\nexport const economizeApiRef = createApiRef<EconomizeApi>({\r\n  id: 'plugin.economize.service',\r\n});\r\n","export const GetQuery = {\r\n  weeklyCost(\r\n    table: string,\r\n    database: string,\r\n    start_date: string,\r\n    isCredit: boolean,\r\n  ) {\r\n    return `\r\n    SELECT (YEAR(line_item_usage_start_date) * 100) + WEEK(line_item_usage_start_date) as Week,\r\n\t  sum(line_item_unblended_cost) as cost\r\n    FROM \"${database}\".\"${table}\"\r\n    WHERE \r\n    ${isCredit ? `line_item_line_item_type = 'Credit' AND` : ``}\r\n\t   line_item_usage_start_date > DATE('${start_date}')\r\n    group by 1\r\n    order by 1;\r\n    `;\r\n  },\r\n  top10Services(\r\n    table: string,\r\n    database: string,\r\n    start_date: string,\r\n    isCredit: boolean,\r\n  ) {\r\n    return `\r\n  select \"line_item_product_code\",\r\n\tdate(bill_billing_period_start_date),\r\n\tround(sum(\"line_item_unblended_cost\"), 2) as cost,\r\n  product_product_name\r\n  from \"${database}\".\"${table}\"\r\n  where\r\n  ${isCredit ? ` line_item_line_item_type = 'Credit' AND` : ``}\r\n\t bill_billing_period_start_date > Date('${start_date}')\r\n  group by 1,2,4\r\n  order by 2;\r\n    `;\r\n  },\r\n};\r\n","import {\r\n  GetQueryExecutionCommand,\r\n  StartQueryExecutionCommand,\r\n} from '@aws-sdk/client-athena';\r\nimport { GetQueryResultsCommand } from '@aws-sdk/client-athena';\r\nimport { AthenaClient } from '@aws-sdk/client-athena';\r\nimport { ConfigApi } from '@backstage/core-plugin-api';\r\n\r\nexport const waitFor = (delay: number) =>\r\n  new Promise(resolve => setTimeout(resolve, delay));\r\n\r\nexport const getWeekRange = (weekNo: number, yearNo: number) => {\r\n  const monthNames = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec',\r\n  ];\r\n  let firstDayofYear = new Date(yearNo, 0, 1);\r\n  if (firstDayofYear.getDay() > 4) {\r\n    let weekStart = new Date(\r\n      yearNo,\r\n      0,\r\n      1 + (weekNo - 1) * 7 - firstDayofYear.getDay() + 7,\r\n    );\r\n    let weekEnd = new Date(\r\n      yearNo,\r\n      0,\r\n      1 + (weekNo - 1) * 7 - firstDayofYear.getDay() + 7 + 6,\r\n    );\r\n    return `${weekStart.getDate()} ${\r\n      monthNames[weekStart.getMonth()]\r\n    } - ${weekEnd.getDate()} ${monthNames[weekEnd.getMonth()]}`;\r\n  } else {\r\n    let weekStart = new Date(\r\n      yearNo,\r\n      0,\r\n      1 + (weekNo - 1) * 7 - firstDayofYear.getDay() + 1,\r\n    );\r\n    let weekEnd = new Date(\r\n      yearNo,\r\n      0,\r\n      1 + (weekNo - 1) * 7 - firstDayofYear.getDay() + 1 + 5,\r\n    );\r\n    return `${weekStart.getDate()} ${\r\n      monthNames[weekStart.getMonth()]\r\n    } - ${weekEnd.getDate()} ${monthNames[weekEnd.getMonth()]}`;\r\n  }\r\n};\r\n\r\nexport const fetchQuery = async (configApi: ConfigApi, QueryString: string) => {\r\n  const athenaClient = new AthenaClient({\r\n    region: configApi.getString('economize.region'),\r\n    credentials: {\r\n      accessKeyId: configApi.getString('economize.accessKeyId'),\r\n      secretAccessKey: configApi.getString('economize.secretAccessKey'),\r\n    },\r\n  });\r\n\r\n  const fetchWeeklyCost = new StartQueryExecutionCommand({\r\n    QueryString: QueryString,\r\n    WorkGroup: configApi.getString('economize.workGroup'),\r\n    ResultConfiguration: {\r\n      OutputLocation: configApi.getString('economize.outputLocation'),\r\n    },\r\n  });\r\n  const response = await athenaClient.send(fetchWeeklyCost);\r\n\r\n  const getQueryExecution = new GetQueryExecutionCommand({\r\n    QueryExecutionId: response.QueryExecutionId,\r\n  });\r\n\r\n  let retries = 0;\r\n  let retry = true;\r\n  do {\r\n    await waitFor(2 ** retries * 100);\r\n    const getResultRes = await athenaClient.send(getQueryExecution);\r\n    const Status = getResultRes.QueryExecution.Status.State;\r\n    if (Status === 'SUCCEEDED') {\r\n      retry = false;\r\n    } else if (['RUNNING', 'QUEUED'].includes(Status)) {\r\n      retry = true;\r\n    } else {\r\n      retry = false;\r\n    }\r\n    retries++;\r\n  } while (retry && retries < 5);\r\n\r\n  const getResultQuery = new GetQueryResultsCommand({\r\n    QueryExecutionId: response.QueryExecutionId,\r\n  });\r\n  const fetchResultData = await athenaClient.send(getResultQuery);\r\n\r\n  return fetchResultData;\r\n};\r\n\r\nexport const color = [\r\n  'rgb(27, 175, 252)', // blue-500\r\n  'rgb(161, 222, 254)', // blue-400\r\n  'rgb(40, 79, 147)', // blue-700\r\n  'rgb(39, 127, 254)', // blue-600\r\n  'rgb(107, 97, 243)', // blue-300\r\n  'rgb(65, 54, 219)', // purple-700\r\n  'rgb(53, 44, 186)', // purple-600\r\n  'rgb(88, 77, 236)', // purple-500\r\n  'rgb(107, 97, 243)', // purple-400\r\n  'rgb(136, 120, 252)', // purple-300\r\n];\r\n\r\nexport const formatWithCurrencyUnit = (cost: string, code = 'USD') => {\r\n  if (!(code in currencyCodeSymbolMap)) {\r\n    return numberWithCommas(cost).toString() + ' ' + code;\r\n  }\r\n  const symbol = currencyCodeSymbolMap[code];\r\n  return symbol + ' ' + getNumberUnit(cost);\r\n};\r\n\r\nconst numberWithCommas = x => {\r\n  return round2Places(parseFloat(x)).toLocaleString('en-US');\r\n};\r\n\r\nconst round2Places = num => {\r\n  return Math.round((num + Number.EPSILON) * 100) / 100;\r\n};\r\n\r\nfunction getNumberUnit(labelValue) {\r\n  const sign = Math.sign(Number(labelValue));\r\n  // Nine Zeroes for Billions\r\n  return Number(labelValue) >= 1.0e9\r\n    ? sign * (Number(labelValue) / 1.0e9).toFixed(2) + 'B'\r\n    : // Six Zeroes for Millions\r\n    Number(labelValue) >= 1.0e6\r\n    ? sign * (Number(labelValue) / 1.0e6).toFixed(2) + 'M'\r\n    : // Three Zeroes for Thousands\r\n    Number(labelValue) >= 1.0e3\r\n    ? sign * (Number(labelValue) / 1.0e3).toFixed(2) + 'K'\r\n    : Number(labelValue) === 0.0e3\r\n    ? sign * Number(labelValue)\r\n    : Number(labelValue).toFixed(2);\r\n}\r\n\r\nconst currencyCodes = [\r\n  {\r\n    code: 'USD',\r\n    symbol: '$',\r\n  },\r\n  {\r\n    code: 'EUR',\r\n    symbol: '€',\r\n  },\r\n  {\r\n    code: 'INR',\r\n    symbol: '₹',\r\n  },\r\n  {\r\n    code: 'AUD',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'NOK',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'BRL',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'CAD',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'CZK',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'DKK',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'HKD',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'IDR',\r\n    symbol: 'Rp',\r\n  },\r\n  {\r\n    code: 'ILS',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'JPY',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'CHF',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'MYR',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'MXN',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'NZD',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'PLN',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'RUB',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'SGD',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'KRW',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'SEK',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'TWD',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'THB',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'TRY',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'GBP',\r\n    symbol: '',\r\n  },\r\n  {\r\n    code: 'VND',\r\n    symbol: '',\r\n  },\r\n];\r\n\r\nconst currencyCodeSymbolMap = currencyCodes.reduce((map, obj) => {\r\n  map[obj.code] = obj.symbol;\r\n  return map;\r\n}, {});\r\n","import { ConfigApi } from '@backstage/core-plugin-api';\r\nimport {\r\n  Anomalies,\r\n  EconomizeApi,\r\n  MonthlyCost,\r\n  OrgName,\r\n  ServiceCost,\r\n  WeeklyCost,\r\n} from '.';\r\nimport { subYears, subMonths, format } from 'date-fns';\r\nimport {\r\n  CostExplorerClient,\r\n  GetCostAndUsageCommand,\r\n  GetCostAndUsageCommandInput,\r\n} from '@aws-sdk/client-cost-explorer';\r\nimport {\r\n  OrganizationsClient,\r\n  ListRootsCommand,\r\n  ListOrganizationalUnitsForParentCommand,\r\n  DescribeOrganizationCommand,\r\n} from '@aws-sdk/client-organizations';\r\nimport { GetQuery } from './GetQuery';\r\nimport { fetchQuery, getWeekRange } from '../ulits/ulits';\r\nimport axios from 'axios';\r\ntype Options = {\r\n  configApi: ConfigApi;\r\n};\r\nexport class EconomomizeClient implements EconomizeApi {\r\n  private readonly configApi: ConfigApi;\r\n\r\n  constructor(options: Options) {\r\n    this.configApi = options.configApi;\r\n  }\r\n\r\n  async getOrgAndProject(): Promise<OrgName> {\r\n    const client = new OrganizationsClient({\r\n      region: this.configApi.getString('economize.region'),\r\n      credentials: {\r\n        accessKeyId: this.configApi.getString('economize.accessKeyId'),\r\n        secretAccessKey: this.configApi.getString('economize.secretAccessKey'),\r\n      },\r\n    });\r\n    const orgdes = new DescribeOrganizationCommand({});\r\n    const orgdesRes = await client.send(orgdes);\r\n\r\n    const acc = new ListRootsCommand({});\r\n    const data1 = await client.send(acc);\r\n    const org = new ListOrganizationalUnitsForParentCommand({\r\n      ParentId: data1.Roots[0].Id,\r\n    });\r\n    const data2 = await client.send(org);\r\n    return {\r\n      name: data2.OrganizationalUnits[0].Name,\r\n      OrgID: orgdesRes.Organization.Id,\r\n      AccID: orgdesRes.Organization.MasterAccountId,\r\n    };\r\n  }\r\n\r\n  async getMonthlyCost(isCredit: boolean): Promise<MonthlyCost> {\r\n    const monthly: MonthlyCost = {\r\n      labels: [],\r\n      data: [],\r\n    };\r\n    const client = new CostExplorerClient({\r\n      region: this.configApi.getString('economize.region'),\r\n      credentials: {\r\n        accessKeyId: this.configApi.getString('economize.accessKeyId'),\r\n        secretAccessKey: this.configApi.getString('economize.secretAccessKey'),\r\n      },\r\n    });\r\n\r\n    let lastYear = format(subYears(new Date(), 1), 'yyyy-MM-dd');\r\n    let firstYear = format(new Date(), 'yyyy-MM-dd');\r\n\r\n    let optionsCommand: GetCostAndUsageCommandInput = {\r\n      TimePeriod: { Start: lastYear, End: firstYear },\r\n      Metrics: ['UNBLENDED_COST'],\r\n      Granularity: 'MONTHLY',\r\n    };\r\n\r\n    if (isCredit) {\r\n      optionsCommand = {\r\n        ...optionsCommand,\r\n        Filter: {\r\n          Dimensions: {\r\n            Key: 'RECORD_TYPE',\r\n            Values: ['Credit'],\r\n          },\r\n        },\r\n      };\r\n    }\r\n\r\n    const command = new GetCostAndUsageCommand(optionsCommand);\r\n\r\n    const data = await client.send(command);\r\n\r\n    data.ResultsByTime?.map(value => {\r\n      monthly.labels = [\r\n        ...monthly.labels,\r\n        format(new Date(value.TimePeriod?.Start as string), 'LLL'),\r\n      ];\r\n      monthly.data = [\r\n        ...monthly.data,\r\n        parseFloat(value.Total?.UnblendedCost.Amount as string),\r\n      ];\r\n    });\r\n    return monthly;\r\n  }\r\n  async getDailyCost(isCredit: boolean): Promise<MonthlyCost> {\r\n    const monthly: MonthlyCost = {\r\n      labels: [],\r\n      data: [],\r\n    };\r\n    const client = new CostExplorerClient({\r\n      region: this.configApi.getString('economize.region'),\r\n      credentials: {\r\n        accessKeyId: this.configApi.getString('economize.accessKeyId'),\r\n        secretAccessKey: this.configApi.getString('economize.secretAccessKey'),\r\n      },\r\n    });\r\n\r\n    let lastYear = format(subMonths(new Date(), 1), 'yyyy-MM-dd');\r\n    let firstYear = format(new Date(), 'yyyy-MM-dd');\r\n\r\n    let optionsCommand: GetCostAndUsageCommandInput = {\r\n      TimePeriod: { Start: lastYear, End: firstYear },\r\n      Metrics: ['UNBLENDED_COST'],\r\n      Granularity: 'DAILY',\r\n    };\r\n\r\n    if (isCredit) {\r\n      optionsCommand = {\r\n        ...optionsCommand,\r\n        Filter: {\r\n          Dimensions: {\r\n            Key: 'RECORD_TYPE',\r\n            Values: ['Credit'],\r\n          },\r\n        },\r\n      };\r\n    }\r\n\r\n    const command = new GetCostAndUsageCommand(optionsCommand);\r\n\r\n    const data = await client.send(command);\r\n\r\n    data.ResultsByTime?.map(value => {\r\n      monthly.labels = [\r\n        ...monthly.labels,\r\n        format(new Date(value.TimePeriod?.Start as string), 'dd LLL'),\r\n      ];\r\n      monthly.data = [\r\n        ...monthly.data,\r\n        parseFloat(value.Total?.UnblendedCost.Amount as string),\r\n      ];\r\n    });\r\n    return monthly;\r\n  }\r\n  async getWeeklyCost(isCredit: boolean): Promise<WeeklyCost> {\r\n    const monthly: WeeklyCost = {\r\n      labels: [],\r\n      data: [],\r\n    };\r\n\r\n    const fetchResultData = await fetchQuery(\r\n      this.configApi,\r\n      GetQuery.weeklyCost(\r\n        this.configApi.getString('economize.table'),\r\n        this.configApi.getString('economize.database'),\r\n        format(subMonths(new Date(), 1), 'yyyy-MM-dd'),\r\n        isCredit,\r\n      ),\r\n    );\r\n\r\n    fetchResultData.ResultSet?.Rows?.slice(1).forEach(arr => {\r\n      monthly.labels = [\r\n        ...monthly.labels,\r\n        [\r\n          `Week ${arr.Data ? arr.Data[0].VarCharValue?.slice(-2) : ''}`,\r\n          getWeekRange(\r\n            parseInt(\r\n              arr.Data ? (arr.Data[0].VarCharValue?.slice(-2) as string) : '',\r\n            ),\r\n            parseInt(\r\n              arr.Data ? (arr.Data[0].VarCharValue?.slice(0, 3) as string) : '',\r\n            ),\r\n          ) as string,\r\n        ],\r\n      ];\r\n      monthly.data = [\r\n        ...monthly.data,\r\n        parseFloat(arr.Data ? (arr.Data[1].VarCharValue as string) : ''),\r\n      ];\r\n    });\r\n\r\n    return monthly;\r\n  }\r\n\r\n  async getTopServices(isCredit: boolean): Promise<ServiceCost[]> {\r\n    const topService: ServiceCost[] = [];\r\n    const fetchResultData = await fetchQuery(\r\n      this.configApi,\r\n      GetQuery.top10Services(\r\n        this.configApi.getString('economize.table'),\r\n        this.configApi.getString('economize.database'),\r\n        format(subMonths(new Date(), 6), 'yyyy-MM-dd'),\r\n        isCredit,\r\n      ),\r\n    );\r\n\r\n    fetchResultData.ResultSet?.Rows?.slice(1).forEach(arr => {\r\n      topService.push({\r\n        service: arr.Data ? (arr.Data[0].VarCharValue as string) : '',\r\n        month: format(\r\n          new Date(arr.Data ? (arr.Data[1].VarCharValue as string) : ''),\r\n          'LLL',\r\n        ),\r\n        amount: parseFloat(\r\n          arr.Data ? (arr.Data[2].VarCharValue as string) : '',\r\n        ),\r\n        name: arr.Data ? (arr.Data[3].VarCharValue as string) : '',\r\n      });\r\n    });\r\n\r\n    return topService;\r\n  }\r\n\r\n  async getAnomalyDelection(\r\n    startDate: Date,\r\n    endDate: Date,\r\n  ): Promise<Anomalies> {\r\n    const data = await axios.post<Anomalies>(\r\n\r\n      'https://app.economize.cloud/api/public/aws/anomaly_detection',\r\n      {\r\n        endDate: endDate.toISOString().slice(0, -5).replace('T', ' ') + '-07',\r\n        startDate:\r\n          startDate.toISOString().slice(0, -5).replace('T', ' ') + '-07',\r\n        type: 'Prophet',\r\n        region: this.configApi.getString('economize.region'),\r\n        OrgID: (await this.getOrgAndProject()).OrgID,\r\n        table: this.configApi.getString('economize.table'),\r\n        database: this.configApi.getString('economize.database'),\r\n        workGroup: this.configApi.getString('economize.workGroup'),\r\n        outputLocation: this.configApi.getString('economize.outputLocation'),\r\n        access_token: this.configApi.getString('economize.accessKeyId'),\r\n        access_sercet: this.configApi.getString('economize.secretAccessKey'),\r\n        api_key: this.configApi.getOptionalString('economize.apiKey'),\r\n        hostname: this.configApi.getOptionalString('economize.hostname'),\r\n      },\r\n    );\r\n    return data.data;\r\n  }\r\n}\r\n","import { createRouteRef } from '@backstage/core-plugin-api';\n\nexport const rootRouteRef = createRouteRef({\n  id: 'economize',\n});\n","import {\n  configApiRef,\n  createApiFactory,\n  createPlugin,\n  createRoutableExtension,\n} from '@backstage/core-plugin-api';\nimport { economizeApiRef } from './api/economizeApi';\nimport { EconomomizeClient } from './api/economizeClient';\n\nimport { rootRouteRef } from './routes';\n\nexport const economizePlugin = createPlugin({\n  id: 'economize',\n  apis: [\n    createApiFactory({\n      api: economizeApiRef,\n      deps: { configApi: configApiRef },\n      factory: ({ configApi }) => new EconomomizeClient({ configApi }),\n    }),\n  ],\n  routes: {\n    root: rootRouteRef,\n  },\n});\n\nexport const EconomizePage = economizePlugin.provide(\n  createRoutableExtension({\n    name: 'EconomizePage',\n    component: () =>\n      import('./components/EconomizePage').then(m => m.EconomizePage),\n    mountPoint: rootRouteRef,\n  }),\n);\n"],"names":[],"mappings":"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"}